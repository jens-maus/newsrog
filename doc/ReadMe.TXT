NewsRog is the most powerful newsreader available for the Amiga
platform.  NewsRog is commercial software.  To use this archive,
you MUST use the supplied installer script.

More NewsRog information is available on the ShadowWorks Software
support page:

   http://www.frii.com/~srk/ShadowWorks/Preview/NR.html

Here are just a few of NewsRog's features:

 o Full support for inline 16 and 24 bit truecolor images on supporting
   CyberGfx screen modes (e.g., from uuencoded data in article bodies).

 o On and offline reading and post creation.

 o Asynchronous design.  You can start browsing articles even before
   the headers are finished loading.  You can read articles in one
   group while batch downloading another group for later offline
   reading.  You can mark some articles for downloading in one group, and
   while they're still transferring, browse around and add more to the
   download queue.

 o Multiple server support.  You can get some groups from a different
   newsserver than other groups.  Define as many servers as you want.

 o Article prefetching can load the next few articles while you
   read the first, to avoid the network lag of fetching the following
   articles.  This often can make articles avaiablle instantly.

 o "Single key" group reading, thread-smart.

 o Full clipboard support from articles and article lists, even in
   different and proportional fonts.

 o Full dynamic searching - search results are updated instantly
   after each keystroke (like emacs I-search)!  You can search through
   article bodies or any header field, by fixed string or regexp.

 o Full control over article display.  Plug-ins are available to
   control how articles are displayed.  Fonts and colors are supported.  A
   few of the many features are: Smart colorization of quoted text,
   trimming unnecessarily large blocks of quoted text (but still be able
   to toggle the full text back on with a mouse click), hiding signature
   blocks, colorization of header fields, trimming of large empty regions
   in an article, clickable URL's (interfaces with most web browsers),
   ROT13, inline display of binary images, and more.

 o Newsgroup subsetting and user defined views.  Create a selection
   filter to toggle between the "FS:" or the "WTB:" posts in a
   marketplace group with a mouseclick.  Define any view you want for any
   groups.

 o Kill threads now, and in the future!  If you don't wish to read a
   thread, you can kill all future posts to that thread automatically so
   you don't have to re-kill the thread every time new articles are posted
   to it.  Never see those annoying threads again.  Best of all, after the
   thread becomes inactive for a use defined length of time, the kill file
   entry for it will automatically expire after a period of disuse.

 o Fully indented threading capability.  Among the fastest threading of
   any major newsreader on any platform adjusted for CPU speed.     

 o Incredibly powerful article selection and kill capabilities.  Most
   newsreaders limit you to performing pattern matches on header fields,
   but not this one.  You can, for example, define a filter that matches
   any article that is a *followup* to an article posted by particular
   author, for example, so in effect you can define a view that is "any
   articles posted by Joe Smith and any followups to those articles."
   There is so much power that it can't be adequately summed up here.

 o Plug in artchitecture to support future display, selection, and kill
   capabilities.

 o Sorting articles, groups, and so on by any criteria.

 o Full understanding of posting dates normalized by time zone.

 o Full control over which fields are displayed in lists.

 o Local caching of headers so they don't have to be re-read from
   the network later.  Startup time of a 500-article group is about a
   second a reasonably quick machine.  Even a 5000 article group is very
   practical to deal with.

 o Fully abortable networking IO.  Opened a huge group or started to read
   a 5000 line post by mistake?  Just cancel it and keep going.

 o Stateless performance.  Read some articles, take your machine
   offline, come back online later, maybe change to a different news
   server, and keep reading as if nothing happened.

 o Network status & statistics windows.  Track average connection speeds,
   # of succeeded and failed connections to news servers, etc.
   Automatically retry connections if they fail.

 o Extremely high performance string handling for killing articles based
   on header fields.   Custom string functions are up to 15 times faster
   than OS or compiler supplied string handling, for extremely rapid
   killfile processing.
